---
- hosts: swarm-managers
  remote_user: root

  tasks:
  - name: deploy docker core services to swarm
    block:
      - name: create traefik overlay networks
        docker_network:
          name: "{{ item }}"
          state: present
          driver: overlay
        loop:
          - traefik-public
          - traefik-mgnt

      - name: deploy docker socket proxy service
        docker_swarm_service:
          image: alpine/socat
          state: present
          name: socat
          restart_config:
            condition: any
          networks: traefik-mgnt
          command: "socat tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock"
          limits:
            memory: 64M
          reservations:
            memory: 32M
          mounts:
            - source: /var/run/docker.sock
              target: /var/run/docker.sock
              type: bind
          placement:
            constraints:
              - node.role == manager

      - name: deploy traefik reverse-proxy service
        docker_swarm_service:
          image: traefik:v2.1
          state: present
          name: traefik
          restart_config:
            condition: any
          networks: 
            - traefik-public
            - traefik-mgnt
          mode: global
          publish:
            - published_port: 80
              target_port: 80
            - published_port: 443
              target_port: 443
          mounts:
            - source: traefik-certificates
              target: /letsencrypt
              type: volume
          args:
            - --api
            - --api.dashboard
            - --accesslog
            - --providers.docker
            - --providers.docker.swarmmode
            - --providers.docker.network=traefik-public
            - --providers.docker.endpoint=tcp://socat:2375
            - --providers.docker.exposedbydefault=false
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --certificatesresolvers.le.acme.email=bperezdemoura@gmail.com
            - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
            - --certificatesresolvers.le.acme.tlschallenge=true
          limits:
            memory: 128M
          reservations:
            memory: 64M
          labels:
            # traefik dashboard and api configs
            traefik.enable: "true"
            traefik.http.routers.api.entrypoints: "websecure"
            traefik.http.routers.api.rule: "Host(\"traefik.brunopma.com\")"
            traefik.http.routers.api.service: "api@internal"
            traefik.http.routers.api.middlewares: "auth"
            traefik.http.routers.api.tls.certresolver: "le"
            traefik.http.middlewares.auth.basicauth.users: "admin:$apr1$OQBhOGPp$RklKNZteXfX/icPanc7r7/"
            traefik.http.services.dummy-svc.loadbalancer.server.port: "9999"
            # global http to https redirect
            traefik.http.routers.http-catchall.rule: "hostregexp(`{host:.+}`)"
            traefik.http.routers.http-catchall.entrypoints: "web"
            traefik.http.routers.http-catchall.middlewares: "redirect-to-https@docker"
            traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: "https"

      - name: deploy brunopma homepage
        docker_swarm_service:
          image: nginx:stable-alpine
          state: present
          name: brunopma-home
          restart_config:
            condition: on-failure
          networks: 
            - traefik-public
          mode: replicated
          replicas: 1
          placement:
            constraints:
              - node.role == manager
          limits:
            memory: 16M
          reservations:
            memory: 4M
          mounts:
            - source: /var/swarm/brunopma-home
              target: /usr/share/nginx/html
              type: bind
            - source: /var/swarm/nginx.conf
              target: /etc/nginx.conf
              type: bind
              readonly: true
          labels:
            traefik.enable: "true"
            traefik.http.routers.brunopma-home.entrypoints: "websecure"
            traefik.http.routers.brunopma-home.rule: "Host(\"brunopma.com\")"
            traefik.http.routers.brunopma-home.tls.certresolver: "le"
            traefik.http.services.brunopma-home.loadbalancer.server.port: "80"

      - name: deploy whoami - a test service
        docker_swarm_service:
          image: containous/whoami
          state: present
          name: whoami
          restart_config:
            condition: on-failure
          networks: 
            - traefik-public
          mode: replicated
          replicas: 3
          limits:
            memory: 16M
          reservations:
            memory: 4M
          labels:
            traefik.enable: "true"
            traefik.http.routers.whoami.entrypoints: "websecure"
            traefik.http.routers.whoami.rule: "Host(\"whoami.brunopma.com\")"
            traefik.http.routers.whoami.tls.certresolver: "le"
            traefik.http.services.whoami.loadbalancer.server.port: "80"
    run_once: yes
